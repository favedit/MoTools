namespace MO.Common.IO
{
   //============================================================
   // <T>输出流</T>
   //============================================================
   public interface IOutput
   {
      //============================================================
      // <T>写入一个布尔值。</T>
      //
      // @params value 布尔值
      //============================================================
      void WriteBool(bool value);

      //============================================================
      // <T>写入一个有符号8位整数。</T>
      //
      // @params value 有符号8位整数
      //============================================================
      void WriteInt8(sbyte value);

      //============================================================
      // <T>写入一个有符号16位整数。</T>
      //
      // @params value 有符号16位整数
      //============================================================
      void WriteInt16(short value);

      //============================================================
      // <T>写入一个有符号32位整数。</T>
      //
      // @params value 有符号32位整数
      //============================================================
      void WriteInt32(int value);

      //============================================================
      // <T>写入一个有符号64位整数。</T>
      //
      // @params value 有符号64位整数
      //============================================================
      void WriteInt64(long value);

      //============================================================
      // <T>写入一个无符号8位整数。</T>
      //
      // @params value 无符号8位整数
      //============================================================
      void WriteUint8(byte value);

      //============================================================
      // <T>写入一个无符号16位整数。</T>
      //
      // @params value 无符号16位整数
      //============================================================
      void WriteUint16(ushort value);

      //============================================================
      // <T>写入一个无符号32位整数。</T>
      //
      // @params value 无符号32位整数
      //============================================================
      void WriteUint32(uint value);

      //============================================================
      // <T>写入一个无符号64位整数。</T>
      //
      // @params value 无符号64位整数
      //============================================================
      void WriteUint64(ulong value);

      //============================================================
      // <T>写入一个单精度浮点数。</T>
      //
      // @params value 单精度浮点数
      //============================================================
      void WriteFloat(float value);

      //============================================================
      // <T>写入一个双精度浮点数。</T>
      //
      // @params value 双精度浮点数
      //============================================================
      void WriteDouble(double value);

      //============================================================
      // <T>写入一个字符串。</T>
      //
      // @params value 字符串
      //============================================================
      void WriteString(string value);

      //============================================================
      // <T>写入一个ANSI字符串。</T>
      //
      // @params value 字符串
      //============================================================
      void WriteAnsiString(string value);

      //============================================================
      // <T>写入一个UTF-8字符串。</T>
      //
      // @params value UTF-8字符串
      //============================================================
      void WriteUTFString(string value);

      //============================================================
      // <T>写入一个宽字符串。</T>
      //
      // @param value 字符串
      //============================================================
      void WriteWideString(string value);

      //============================================================
      // <T>写入一段数据。</T>
      //
      // @params bytes 字节流
      // @params offset 偏移量
      // @params length 写入长度
      //============================================================
      int WriteBytes(byte[] bytes, int offset, int length);
   }
}
