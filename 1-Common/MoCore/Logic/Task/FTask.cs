using System;
using MO.Common.Lang;

namespace MO.Core.Logic.Task
{
   //============================================================
   // <T>任务。<T>
   //============================================================
   public class FTask : FObject, ITask
   {
      // 标签
      protected string _label;

      // 开始时间
      protected DateTime _startDateTime;

      // 结束时间
      protected DateTime _endDateTime;

      // 附带对象
      protected object _tag;

      //============================================================
      // <T>获得或设置标签。<T>
      //============================================================
      public string Label {
         get { return _label; }
         set { _label = value; }
      }

      //============================================================
      // <T>获得或设置开始时间。<T>
      //============================================================
      public DateTime StartDateTime {
         get { return _startDateTime; }
         set { _startDateTime = value; }
      }

      //============================================================
      // <T>获得或设置结束时间。<T>
      //============================================================
      public DateTime EndDateTime {
         get { return _endDateTime; }
         set { _endDateTime = value; }
      }

      //============================================================
      // <T>获得或设置附带对象。<T>
      //============================================================
      public object Tag {
         get { return _tag; }
         set { _tag = value; }
      }

      //============================================================
      // <T>开始处理事件 <T>
      //============================================================
      public virtual void OnBegin() {
      }

      //============================================================
      // <T>处理中回调事件。<T>
      //============================================================      
      public virtual void OnProcess() {
      }

      //============================================================
      // <T>结束处理事件。<T>
      //============================================================      
      public virtual void OnEnd() {
      }

      //============================================================
      // <T>获得字符串信息。<T>
      //
      // @return 字符串信息
      //============================================================      
      public override string ToString() {
         return String.Empty;
      }
   }
}
